package main

import "fmt"

func main() {
	str := "Hello Almaz"

	//УКАЗАТЕЛЬ - тип данных, который в качестве значения хранит адрес ячейки памяти значения, либо другого указателя
	//&x - адрес X
	//*int - указатель на int
	//может быть nil

	//поменяли значения переменной str, через указатель
	//звёздочка перед типом означает, теперь это указатель на какой тип

	//Получили адрес str и присвоили его
	ptrStr := &str
	//Разыменовали - получили значение и поменяли его
	*ptrStr = "Hello chumaz"
	fmt.Println(str)

	//-------------------
	num := 3
	//не работает как надо, передаём по значению аргумент, но не меняет само значение
	square(num)
	//значение не поменялось
	fmt.Println(num)

	//передали указатель

	ptrSquare(&num)
	fmt.Println(num)

	//Используя синтаксис *p , мы обращаемся к значению, которое находится по адресу p(получается достучаться и изменить значение n)
	n := 4
	//p теперь имеет указатель на n
	p := &n
	//добираемся до значения n, разыменовывая указатель (*p)
	*p = 228
	fmt.Println(n)

	//
	fmt.Println("----------")

	n1 := 0
	p1 := &n1
	*p1 = 404
	//p1 - указатель на n1 и имеет с ним один и тот же адрес Вывод:(0xc00008c098 0xc00008c098)
	fmt.Println(&n1, p1)
	//n1 - значение, p1 - указатель на n1(0xc00008c098), разыменовываем его, добираясь до значения  Вывод:(404 404)
	fmt.Println(n1, *p1)
}

func square(n int) {
	n *= n
}

func ptrSquare(n *int) {
	*n = *n * *n
}

//Принимает указатель, если значение nil, то возвращает false
func hasWallet(balance *int) bool {
	return balance != nil
}
